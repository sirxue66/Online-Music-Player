<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javaclimb.musicplayer.dao.ListSongMapper">
    <resultMap id="BaseResultMap" type="com.javaclimb.musicplayer.domain.ListSong" >
        <id property="id" jdbcType="INTEGER" column="id"/>
        <result property="songId" jdbcType="INTEGER" column="song_id"/>
        <result property="songListId" jdbcType="INTEGER" column="song_list_id"/>
    </resultMap>
<!--列出所有 列  ，用于查询-->
    <sql id="Base_Column_List">
    id,song_id,song_list_id
    </sql>

<!--    增加-->
<!--    <trim prefix="(" suffix=")" suffixOverrides=",">  去掉前边的 （，去掉后边的 ），去掉最后一个 ，-->
<!--    parameterType  输入参数类型-->
<!--    resultMap   返回对象-->
    <insert id="insert" parameterType="com.javaclimb.musicplayer.domain.ListSong">
        insert into list_song
        <trim suffixOverrides="," suffix=")" prefix="(">
        <if test="id != null">id, </if>
        <if test="songId != null">song_id, </if>
        <if test="songListId != null">song_list_id, </if>
    </trim>
        <trim suffixOverrides="," suffix=")" prefix=" values (">
        <if test="id != null">#{id}, </if>
        <if test="songId != null">#{songId}, </if>
        <if test="songListId != null">#{songListId}, </if>
    </trim>
    </insert>

<!--    修改-->
    <update id="update" parameterType="com.javaclimb.musicplayer.domain.ListSong">
        update list_song
        <set>
        <if test="songId != null">song_id = #{songId}, </if>
        <if test="songListId != null">song_list_id = #{songListId}, </if>
    </set>
        where id = #{id}
    </update>

<!--删除-->
    <delete id="delete" parameterType="java.lang.Integer">
        delete from list_song
        where id=#{id}
    </delete>

    <delete id="deleteBySongIdAndSongListId" parameterType="java.lang.Integer">
    delete from list_song
    where song_id=#{songId} and song_list_id=#{songListId}
    </delete>

<!--    查询-->

    <select id="selectListSongById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from list_song
    where id=#{id}
</select>


    <select id="allListSong" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from list_song
</select>


    <select id="selectSongByListSongId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from list_song
    where song_list_id=#{songListId}
</select>
</mapper>






















